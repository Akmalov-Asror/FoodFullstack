{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transcode = exports.getFieldNameOnBehavior = exports.isRequiredField = exports.isProto3OptionalField = exports.requestChangeCaseAndCleanup = exports.flattenObject = exports.match = exports.applyPattern = exports.encodeWithoutSlashes = exports.encodeWithSlashes = exports.buildQueryStringComponents = exports.deleteField = exports.deepCopy = exports.getField = void 0;\nconst util_1 = require(\"./util\");\nconst httpOptionName = '(google.api.http)';\nconst fieldBehaviorOptionName = '(google.api.field_behavior)';\nconst proto3OptionalName = 'proto3_optional';\n// List of methods as defined in google/api/http.proto (see HttpRule)\nconst supportedHttpMethods = ['get', 'post', 'put', 'patch', 'delete'];\nfunction getField(request, field) {\n  const parts = field.split('.');\n  let value = request;\n  for (const part of parts) {\n    if (typeof value !== 'object') {\n      return undefined;\n    }\n    value = value[part];\n  }\n  if (typeof value === 'object' && !Array.isArray(value) && value !== null) {\n    return undefined;\n  }\n  return value;\n}\nexports.getField = getField;\nfunction deepCopy(request) {\n  if (typeof request !== 'object' || request === null) {\n    return request;\n  }\n  const copy = Object.assign({}, request);\n  for (const key in copy) {\n    if (Array.isArray(copy[key])) {\n      copy[key] = copy[key].map(deepCopy);\n    } else if (typeof copy[key] === 'object' && copy[key] !== null) {\n      copy[key] = deepCopy(copy[key]);\n    }\n  }\n  return copy;\n}\nexports.deepCopy = deepCopy;\nfunction deleteField(request, field) {\n  const parts = field.split('.');\n  while (parts.length > 1) {\n    if (typeof request !== 'object') {\n      return;\n    }\n    const part = parts.shift();\n    request = request[part];\n  }\n  const part = parts.shift();\n  if (typeof request !== 'object') {\n    return;\n  }\n  delete request[part];\n}\nexports.deleteField = deleteField;\nfunction buildQueryStringComponents(request, prefix = '') {\n  const resultList = [];\n  for (const key in request) {\n    if (Array.isArray(request[key])) {\n      for (const value of request[key]) {\n        resultList.push(`${prefix}${encodeWithoutSlashes(key)}=${encodeWithoutSlashes(value.toString())}`);\n      }\n    } else if (typeof request[key] === 'object' && request[key] !== null) {\n      resultList.push(...buildQueryStringComponents(request[key], `${key}.`));\n    } else {\n      resultList.push(`${prefix}${encodeWithoutSlashes(key)}=${encodeWithoutSlashes(request[key] === null ? 'null' : request[key].toString())}`);\n    }\n  }\n  return resultList;\n}\nexports.buildQueryStringComponents = buildQueryStringComponents;\nfunction encodeWithSlashes(str) {\n  return str.split('').map(c => c.match(/[-_.~0-9a-zA-Z]/) ? c : encodeURIComponent(c)).join('');\n}\nexports.encodeWithSlashes = encodeWithSlashes;\nfunction encodeWithoutSlashes(str) {\n  return str.split('').map(c => c.match(/[-_.~0-9a-zA-Z/]/) ? c : encodeURIComponent(c)).join('');\n}\nexports.encodeWithoutSlashes = encodeWithoutSlashes;\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\nfunction applyPattern(pattern, fieldValue) {\n  if (!pattern || pattern === '*') {\n    return encodeWithSlashes(fieldValue);\n  }\n  if (!pattern.includes('*') && pattern !== fieldValue) {\n    return undefined;\n  }\n  // since we're converting the pattern to a regex, make necessary precautions:\n  const regex = new RegExp('^' + escapeRegExp(pattern).replace(/\\\\\\*\\\\\\*/g, '(.+)').replace(/\\\\\\*/g, '([^/]+)') + '$');\n  if (!fieldValue.match(regex)) {\n    return undefined;\n  }\n  return encodeWithoutSlashes(fieldValue);\n}\nexports.applyPattern = applyPattern;\nfunction match(request, pattern) {\n  let url = pattern;\n  const matchedFields = [];\n  for (;;) {\n    const match = url.match(/^(.*)\\{([^}=]+)(?:=([^}]*))?\\}(.*)/);\n    if (!match) {\n      break;\n    }\n    const [, before, field, pattern, after] = match;\n    matchedFields.push(field);\n    const fieldValue = getField(request, field);\n    if (typeof fieldValue === 'undefined') {\n      return undefined;\n    }\n    const appliedPattern = applyPattern(pattern, fieldValue === null ? 'null' : fieldValue.toString());\n    if (typeof appliedPattern === 'undefined') {\n      return undefined;\n    }\n    url = before + appliedPattern + after;\n  }\n  return {\n    matchedFields,\n    url\n  };\n}\nexports.match = match;\nfunction flattenObject(request) {\n  const result = {};\n  for (const key in request) {\n    if (typeof request[key] === 'undefined') {\n      continue;\n    }\n    if (Array.isArray(request[key])) {\n      // According to the http.proto comments, a repeated field may only\n      // contain primitive types, so no extra recursion here.\n      result[key] = request[key];\n      continue;\n    }\n    if (typeof request[key] === 'object' && request[key] !== null) {\n      const nested = flattenObject(request[key]);\n      for (const nestedKey in nested) {\n        result[`${key}.${nestedKey}`] = nested[nestedKey];\n      }\n      continue;\n    }\n    result[key] = request[key];\n  }\n  return result;\n}\nexports.flattenObject = flattenObject;\nfunction requestChangeCaseAndCleanup(request, caseChangeFunc) {\n  if (!request || typeof request !== 'object') {\n    return request;\n  }\n  const convertedRequest = {};\n  for (const field in request) {\n    // cleaning up inherited properties\n    if (!Object.prototype.hasOwnProperty.call(request, field)) {\n      continue;\n    }\n    const convertedField = caseChangeFunc(field);\n    const value = request[field];\n    if (Array.isArray(value)) {\n      convertedRequest[convertedField] = value.map(v => requestChangeCaseAndCleanup(v, caseChangeFunc));\n    } else {\n      convertedRequest[convertedField] = requestChangeCaseAndCleanup(value, caseChangeFunc);\n    }\n  }\n  return convertedRequest;\n}\nexports.requestChangeCaseAndCleanup = requestChangeCaseAndCleanup;\nfunction isProto3OptionalField(field) {\n  return field && field.options && field.options[proto3OptionalName];\n}\nexports.isProto3OptionalField = isProto3OptionalField;\nfunction isRequiredField(field) {\n  return field && field.options && field.options[fieldBehaviorOptionName] === 'REQUIRED';\n}\nexports.isRequiredField = isRequiredField;\nfunction getFieldNameOnBehavior(fields) {\n  const requiredFields = new Set();\n  const optionalFields = new Set();\n  for (const fieldName in fields) {\n    const field = fields[fieldName];\n    if (isRequiredField(field)) {\n      requiredFields.add(fieldName);\n    }\n    if (isProto3OptionalField(field)) {\n      optionalFields.add(fieldName);\n    }\n  }\n  return {\n    requiredFields,\n    optionalFields\n  };\n}\nexports.getFieldNameOnBehavior = getFieldNameOnBehavior;\nfunction transcode(request, parsedOptions, requestFields) {\n  const {\n    requiredFields,\n    optionalFields\n  } = getFieldNameOnBehavior(requestFields);\n  // all fields annotated as REQUIRED MUST be emitted in the body.\n  for (const requiredField of requiredFields) {\n    if (!(requiredField in request) || request[requiredField] === 'undefined') {\n      throw new Error(`Required field ${requiredField} is not present in the request.`);\n    }\n  }\n  // request is supposed to have keys in camelCase.\n  const snakeRequest = requestChangeCaseAndCleanup(request, util_1.camelToSnakeCase);\n  const httpRules = [];\n  for (const option of parsedOptions) {\n    if (!(httpOptionName in option)) {\n      continue;\n    }\n    const httpRule = option[httpOptionName];\n    httpRules.push(httpRule);\n    if (httpRule === null || httpRule === void 0 ? void 0 : httpRule.additional_bindings) {\n      const additionalBindings = Array.isArray(httpRule.additional_bindings) ? httpRule.additional_bindings : [httpRule.additional_bindings];\n      httpRules.push(...additionalBindings);\n    }\n  }\n  for (const httpRule of httpRules) {\n    for (const httpMethod of supportedHttpMethods) {\n      if (!(httpMethod in httpRule)) {\n        continue;\n      }\n      const pathTemplate = httpRule[httpMethod];\n      const matchResult = match(snakeRequest, pathTemplate);\n      if (typeof matchResult === 'undefined') {\n        continue;\n      }\n      const {\n        url,\n        matchedFields\n      } = matchResult;\n      if (httpRule.body === '*') {\n        // all fields except the matched fields go to request data\n        const data = deepCopy(snakeRequest);\n        for (const field of matchedFields) {\n          deleteField(data, field);\n        }\n        // Remove unset proto3 optional field from the request body.\n        for (const key in data) {\n          if (optionalFields.has(util_1.snakeToCamelCase(key)) && (!(key in snakeRequest) || snakeRequest[key] === 'undefined')) {\n            delete data[key];\n          }\n        }\n        // HTTP endpoint expects camelCase but we have snake_case at this point\n        const camelCaseData = requestChangeCaseAndCleanup(data, util_1.snakeToCamelCase);\n        return {\n          httpMethod,\n          url,\n          queryString: '',\n          data: camelCaseData\n        };\n      }\n      // one field possibly goes to request data, others go to query string\n      const body = httpRule.body;\n      let data = '';\n      const queryStringObject = deepCopy(request); // use camel case for query string\n      if (body) {\n        deleteField(queryStringObject, util_1.snakeToCamelCase(body));\n        // Unset optional field should not add in body request.\n        data = optionalFields.has(body) && snakeRequest[body] === 'undefined' ? '' : snakeRequest[body];\n      }\n      for (const field of matchedFields) {\n        deleteField(queryStringObject, util_1.snakeToCamelCase(field));\n      }\n      // Unset proto3 optional field does not appear in the query params.\n      for (const key in queryStringObject) {\n        if (optionalFields.has(key) && request[key] === 'undefined') {\n          delete queryStringObject[key];\n        }\n      }\n      const queryStringComponents = buildQueryStringComponents(queryStringObject);\n      const queryString = queryStringComponents.join('&');\n      let camelCaseData;\n      if (typeof data === 'string') {\n        camelCaseData = data;\n      } else {\n        camelCaseData = requestChangeCaseAndCleanup(data, util_1.snakeToCamelCase);\n      }\n      return {\n        httpMethod,\n        url,\n        queryString,\n        data: camelCaseData\n      };\n    }\n  }\n  return undefined;\n}\nexports.transcode = transcode;","map":{"version":3,"names":["util_1","require","httpOptionName","fieldBehaviorOptionName","proto3OptionalName","supportedHttpMethods","getField","request","field","parts","split","value","part","undefined","Array","isArray","exports","deepCopy","copy","Object","assign","key","map","deleteField","length","shift","buildQueryStringComponents","prefix","resultList","push","encodeWithoutSlashes","toString","encodeWithSlashes","str","c","match","encodeURIComponent","join","escapeRegExp","replace","applyPattern","pattern","fieldValue","includes","regex","RegExp","url","matchedFields","before","after","appliedPattern","flattenObject","result","nested","nestedKey","requestChangeCaseAndCleanup","caseChangeFunc","convertedRequest","prototype","hasOwnProperty","call","convertedField","v","isProto3OptionalField","options","isRequiredField","getFieldNameOnBehavior","fields","requiredFields","Set","optionalFields","fieldName","add","transcode","parsedOptions","requestFields","requiredField","Error","snakeRequest","camelToSnakeCase","httpRules","option","httpRule","additional_bindings","additionalBindings","httpMethod","pathTemplate","matchResult","body","data","has","snakeToCamelCase","camelCaseData","queryString","queryStringObject","queryStringComponents"],"sources":["../../src/transcoding.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}