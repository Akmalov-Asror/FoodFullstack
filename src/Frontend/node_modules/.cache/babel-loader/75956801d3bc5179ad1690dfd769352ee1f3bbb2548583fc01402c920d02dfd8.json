{"ast":null,"code":"\"use strict\";\n\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n  Reader.call(this, buffer);\n\n  /**\n   * Read buffer.\n   * @name BufferReader#buf\n   * @type {Buffer}\n   */\n}\n\nBufferReader._configure = function () {\n  /* istanbul ignore else */\n  if (util.Buffer) BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n  var len = this.uint32(); // modifies pos\n  return this.buf.utf8Slice ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len)) : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();","map":{"version":3,"names":["module","exports","BufferReader","Reader","require","prototype","Object","create","constructor","util","buffer","call","_configure","Buffer","_slice","slice","string","read_string_buffer","len","uint32","buf","utf8Slice","pos","Math","min","toString"],"sources":["C:/Users/ergas/OneDrive/Рабочий стол/inno/FoodFullstack/src/Frontend/node_modules/google-gax/node_modules/protobufjs/src/reader_buffer.js"],"sourcesContent":["\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,OAAO,GAAGC,YAAY;;AAE7B;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,CAACF,YAAY,CAACG,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACJ,MAAM,CAACE,SAAS,CAAC,EAAEG,WAAW,GAAGN,YAAY;AAErF,IAAIO,IAAI,GAAGL,OAAO,CAAC,gBAAgB,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,YAAYA,CAACQ,MAAM,EAAE;EAC1BP,MAAM,CAACQ,IAAI,CAAC,IAAI,EAAED,MAAM,CAAC;;EAEzB;AACJ;AACA;AACA;AACA;AACA;;AAEAR,YAAY,CAACU,UAAU,GAAG,YAAY;EAClC;EACA,IAAIH,IAAI,CAACI,MAAM,EACXX,YAAY,CAACG,SAAS,CAACS,MAAM,GAAGL,IAAI,CAACI,MAAM,CAACR,SAAS,CAACU,KAAK;AACnE,CAAC;;AAGD;AACA;AACA;AACAb,YAAY,CAACG,SAAS,CAACW,MAAM,GAAG,SAASC,kBAAkBA,CAAA,EAAG;EAC1D,IAAIC,GAAG,GAAG,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;EACzB,OAAO,IAAI,CAACC,GAAG,CAACC,SAAS,GACnB,IAAI,CAACD,GAAG,CAACC,SAAS,CAAC,IAAI,CAACC,GAAG,EAAE,IAAI,CAACA,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,IAAI,CAACF,GAAG,GAAGJ,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC,CAAC,GAC3E,IAAI,CAACE,GAAG,CAACK,QAAQ,CAAC,OAAO,EAAE,IAAI,CAACH,GAAG,EAAE,IAAI,CAACA,GAAG,GAAGC,IAAI,CAACC,GAAG,CAAC,IAAI,CAACF,GAAG,GAAGJ,GAAG,EAAE,IAAI,CAACA,GAAG,CAAC,CAAC;AAC7F,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAhB,YAAY,CAACU,UAAU,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}