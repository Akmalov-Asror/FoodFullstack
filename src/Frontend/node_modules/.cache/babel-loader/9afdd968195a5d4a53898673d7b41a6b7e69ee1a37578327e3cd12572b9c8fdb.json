{"ast":null,"code":"\"use strict\";\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getAgent = exports.pool = void 0;\nconst http_1 = require(\"http\");\nconst https_1 = require(\"https\");\n// eslint-disable-next-line node/no-deprecated-api\nconst url_1 = require(\"url\");\nexports.pool = new Map();\n/**\n * Determines if a proxy should be considered based on the environment.\n *\n * @param uri The request uri\n * @returns {boolean}\n */\nfunction shouldUseProxyForURI(uri) {\n  const noProxyEnv = process.env.NO_PROXY || process.env.no_proxy;\n  if (!noProxyEnv) {\n    return true;\n  }\n  const givenURI = new URL(uri);\n  for (const noProxyRaw of noProxyEnv.split(',')) {\n    const noProxy = noProxyRaw.trim();\n    if (noProxy === givenURI.origin || noProxy === givenURI.hostname) {\n      return false;\n    } else if (noProxy.startsWith('*.') || noProxy.startsWith('.')) {\n      const noProxyWildcard = noProxy.replace(/^\\*\\./, '.');\n      if (givenURI.hostname.endsWith(noProxyWildcard)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n/**\n * Returns a custom request Agent if one is found, otherwise returns undefined\n * which will result in the global http(s) Agent being used.\n * @private\n * @param {string} uri The request uri\n * @param {Options} reqOpts The request options\n * @returns {HttpAnyAgent|undefined}\n */\nfunction getAgent(uri, reqOpts) {\n  const isHttp = uri.startsWith('http://');\n  const proxy = reqOpts.proxy || process.env.HTTP_PROXY || process.env.http_proxy || process.env.HTTPS_PROXY || process.env.https_proxy;\n  const poolOptions = Object.assign({}, reqOpts.pool);\n  const manuallyProvidedProxy = !!reqOpts.proxy;\n  const shouldUseProxy = manuallyProvidedProxy || shouldUseProxyForURI(uri);\n  if (proxy && shouldUseProxy) {\n    // tslint:disable-next-line variable-name\n    const Agent = isHttp ? require('http-proxy-agent') : require('https-proxy-agent');\n    const proxyOpts = {\n      ...url_1.parse(proxy),\n      ...poolOptions\n    };\n    return new Agent(proxyOpts);\n  }\n  let key = isHttp ? 'http' : 'https';\n  if (reqOpts.forever) {\n    key += ':forever';\n    if (!exports.pool.has(key)) {\n      // tslint:disable-next-line variable-name\n      const Agent = isHttp ? http_1.Agent : https_1.Agent;\n      exports.pool.set(key, new Agent({\n        ...poolOptions,\n        keepAlive: true\n      }));\n    }\n  }\n  return exports.pool.get(key);\n}\nexports.getAgent = getAgent;","map":{"version":3,"names":["http_1","require","https_1","url_1","exports","pool","Map","shouldUseProxyForURI","uri","noProxyEnv","process","env","NO_PROXY","no_proxy","givenURI","URL","noProxyRaw","split","noProxy","trim","origin","hostname","startsWith","noProxyWildcard","replace","endsWith","getAgent","reqOpts","isHttp","proxy","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","poolOptions","Object","assign","manuallyProvidedProxy","shouldUseProxy","Agent","proxyOpts","parse","key","forever","has","set","keepAlive","get"],"sources":["../../src/agents.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}