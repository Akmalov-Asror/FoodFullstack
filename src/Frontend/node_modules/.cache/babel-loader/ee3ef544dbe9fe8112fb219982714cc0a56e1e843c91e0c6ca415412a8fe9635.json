{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PageDescriptor = void 0;\nconst ended = require(\"is-stream-ended\");\nconst stream_1 = require(\"stream\");\nconst normalApiCaller_1 = require(\"../normalCalls/normalApiCaller\");\nconst pagedApiCaller_1 = require(\"./pagedApiCaller\");\nconst maxAttemptsEmptyResponse = 10;\n/**\n * A descriptor for methods that support pagination.\n */\nclass PageDescriptor {\n  constructor(requestPageTokenField, responsePageTokenField, resourceField) {\n    this.requestPageTokenField = requestPageTokenField;\n    this.responsePageTokenField = responsePageTokenField;\n    this.resourceField = resourceField;\n  }\n  /**\n   * Creates a new object Stream which emits the resource on 'data' event.\n   */\n  createStream(apiCall, request, options) {\n    const stream = new stream_1.PassThrough({\n      objectMode: true\n    });\n    options = Object.assign({}, options, {\n      autoPaginate: false\n    });\n    const maxResults = 'maxResults' in options ? options.maxResults : -1;\n    let pushCount = 0;\n    let started = false;\n    function callback(err, resources, next, apiResp) {\n      if (err) {\n        stream.emit('error', err);\n        return;\n      }\n      // emit full api response with every page.\n      stream.emit('response', apiResp);\n      for (let i = 0; i < resources.length; ++i) {\n        if (ended(stream)) {\n          return;\n        }\n        if (resources[i] === null) {\n          continue;\n        }\n        stream.push(resources[i]);\n        pushCount++;\n        if (pushCount === maxResults) {\n          stream.end();\n        }\n      }\n      if (ended(stream)) {\n        return;\n      }\n      if (!next) {\n        stream.end();\n        return;\n      }\n      // When pageToken is specified in the original options, it will overwrite\n      // the page token field in the next request. Therefore it must be cleared.\n      if ('pageToken' in options) {\n        delete options.pageToken;\n      }\n      if (stream.isPaused()) {\n        request = next;\n        started = false;\n      } else {\n        setImmediate(apiCall, next, options, callback);\n      }\n    }\n    stream.on('resume', () => {\n      if (!started) {\n        started = true;\n        apiCall(request, options, callback);\n      }\n    });\n    return stream;\n  }\n  /**\n   * Create an async iterable which can be recursively called for data on-demand.\n   */\n  asyncIterate(apiCall, request, options) {\n    options = Object.assign({}, options, {\n      autoPaginate: false\n    });\n    const iterable = this.createIterator(apiCall, request, options);\n    return iterable;\n  }\n  createIterator(apiCall, request, options) {\n    const asyncIterable = {\n      [Symbol.asyncIterator]() {\n        let nextPageRequest = request;\n        const cache = [];\n        return {\n          async next() {\n            if (cache.length > 0) {\n              return Promise.resolve({\n                done: false,\n                value: cache.shift()\n              });\n            }\n            let attempts = 0;\n            while (cache.length === 0 && nextPageRequest) {\n              let result;\n              [result, nextPageRequest] = await apiCall(nextPageRequest, options);\n              // For pagination response with protobuf map type, use tuple as representation.\n              if (result && !Array.isArray(result)) {\n                for (const [key, value] of Object.entries(result)) {\n                  cache.push([key, value]);\n                }\n              } else {\n                cache.push(...result);\n              }\n              if (cache.length === 0) {\n                ++attempts;\n                if (attempts > maxAttemptsEmptyResponse) {\n                  break;\n                }\n              }\n            }\n            if (cache.length === 0) {\n              return Promise.resolve({\n                done: true,\n                value: undefined\n              });\n            }\n            return Promise.resolve({\n              done: false,\n              value: cache.shift()\n            });\n          }\n        };\n      }\n    };\n    return asyncIterable;\n  }\n  getApiCaller(settings) {\n    if (!settings.autoPaginate) {\n      return new normalApiCaller_1.NormalApiCaller();\n    }\n    return new pagedApiCaller_1.PagedApiCaller(this);\n  }\n}\nexports.PageDescriptor = PageDescriptor;","map":{"version":3,"names":["ended","require","stream_1","normalApiCaller_1","pagedApiCaller_1","maxAttemptsEmptyResponse","PageDescriptor","constructor","requestPageTokenField","responsePageTokenField","resourceField","createStream","apiCall","request","options","stream","PassThrough","objectMode","Object","assign","autoPaginate","maxResults","pushCount","started","callback","err","resources","next","apiResp","emit","i","length","push","end","pageToken","isPaused","setImmediate","on","asyncIterate","iterable","createIterator","asyncIterable","Symbol","asyncIterator","nextPageRequest","cache","Promise","resolve","done","value","shift","attempts","result","Array","isArray","key","entries","undefined","getApiCaller","settings","NormalApiCaller","PagedApiCaller","exports"],"sources":["../../../src/paginationCalls/pageDescriptor.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}