{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2018 Google LLC\n *\n * Distributed under MIT license.\n * See file LICENSE for detail or copy at https://opensource.org/licenses/MIT\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.requestTimeout = exports.resetIsAvailableCache = exports.isAvailable = exports.project = exports.instance = exports.HEADERS = exports.HEADER_VALUE = exports.HEADER_NAME = exports.SECONDARY_HOST_ADDRESS = exports.HOST_ADDRESS = exports.BASE_PATH = void 0;\nconst gaxios_1 = require(\"gaxios\");\nconst jsonBigint = require(\"json-bigint\");\nexports.BASE_PATH = '/computeMetadata/v1';\nexports.HOST_ADDRESS = 'http://169.254.169.254';\nexports.SECONDARY_HOST_ADDRESS = 'http://metadata.google.internal.';\nexports.HEADER_NAME = 'Metadata-Flavor';\nexports.HEADER_VALUE = 'Google';\nexports.HEADERS = Object.freeze({\n  [exports.HEADER_NAME]: exports.HEADER_VALUE\n});\n/**\n * Returns the base URL while taking into account the GCE_METADATA_HOST\n * environment variable if it exists.\n *\n * @returns The base URL, e.g., http://169.254.169.254/computeMetadata/v1.\n */\nfunction getBaseUrl(baseUrl) {\n  if (!baseUrl) {\n    baseUrl = process.env.GCE_METADATA_IP || process.env.GCE_METADATA_HOST || exports.HOST_ADDRESS;\n  }\n  // If no scheme is provided default to HTTP:\n  if (!/^https?:\\/\\//.test(baseUrl)) {\n    baseUrl = `http://${baseUrl}`;\n  }\n  return new URL(exports.BASE_PATH, baseUrl).href;\n}\n// Accepts an options object passed from the user to the API. In previous\n// versions of the API, it referred to a `Request` or an `Axios` request\n// options object.  Now it refers to an object with very limited property\n// names. This is here to help ensure users don't pass invalid options when\n// they  upgrade from 0.4 to 0.5 to 0.8.\nfunction validate(options) {\n  Object.keys(options).forEach(key => {\n    switch (key) {\n      case 'params':\n      case 'property':\n      case 'headers':\n        break;\n      case 'qs':\n        throw new Error(\"'qs' is not a valid configuration option. Please use 'params' instead.\");\n      default:\n        throw new Error(`'${key}' is not a valid configuration option.`);\n    }\n  });\n}\nasync function metadataAccessor(type, options, noResponseRetries = 3, fastFail = false) {\n  options = options || {};\n  if (typeof options === 'string') {\n    options = {\n      property: options\n    };\n  }\n  let property = '';\n  if (typeof options === 'object' && options.property) {\n    property = '/' + options.property;\n  }\n  validate(options);\n  try {\n    const requestMethod = fastFail ? fastFailMetadataRequest : gaxios_1.request;\n    const res = await requestMethod({\n      url: `${getBaseUrl()}/${type}${property}`,\n      headers: Object.assign({}, exports.HEADERS, options.headers),\n      retryConfig: {\n        noResponseRetries\n      },\n      params: options.params,\n      responseType: 'text',\n      timeout: requestTimeout()\n    });\n    // NOTE: node.js converts all incoming headers to lower case.\n    if (res.headers[exports.HEADER_NAME.toLowerCase()] !== exports.HEADER_VALUE) {\n      throw new Error(`Invalid response from metadata service: incorrect ${exports.HEADER_NAME} header.`);\n    } else if (!res.data) {\n      throw new Error('Invalid response from the metadata service');\n    }\n    if (typeof res.data === 'string') {\n      try {\n        return jsonBigint.parse(res.data);\n      } catch (_a) {\n        /* ignore */\n      }\n    }\n    return res.data;\n  } catch (e) {\n    if (e.response && e.response.status !== 200) {\n      e.message = `Unsuccessful response status code. ${e.message}`;\n    }\n    throw e;\n  }\n}\nasync function fastFailMetadataRequest(options) {\n  const secondaryOptions = {\n    ...options,\n    url: options.url.replace(getBaseUrl(), getBaseUrl(exports.SECONDARY_HOST_ADDRESS))\n  };\n  // We race a connection between DNS/IP to metadata server. There are a couple\n  // reasons for this:\n  //\n  // 1. the DNS is slow in some GCP environments; by checking both, we might\n  //    detect the runtime environment signficantly faster.\n  // 2. we can't just check the IP, which is tarpitted and slow to respond\n  //    on a user's local machine.\n  //\n  // Additional logic has been added to make sure that we don't create an\n  // unhandled rejection in scenarios where a failure happens sometime\n  // after a success.\n  //\n  // Note, however, if a failure happens prior to a success, a rejection should\n  // occur, this is for folks running locally.\n  //\n  let responded = false;\n  const r1 = gaxios_1.request(options).then(res => {\n    responded = true;\n    return res;\n  }).catch(err => {\n    if (responded) {\n      return r2;\n    } else {\n      responded = true;\n      throw err;\n    }\n  });\n  const r2 = gaxios_1.request(secondaryOptions).then(res => {\n    responded = true;\n    return res;\n  }).catch(err => {\n    if (responded) {\n      return r1;\n    } else {\n      responded = true;\n      throw err;\n    }\n  });\n  return Promise.race([r1, r2]);\n}\n/**\n * Obtain metadata for the current GCE instance\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction instance(options) {\n  return metadataAccessor('instance', options);\n}\nexports.instance = instance;\n/**\n * Obtain metadata for the current GCP Project.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction project(options) {\n  return metadataAccessor('project', options);\n}\nexports.project = project;\n/*\n * How many times should we retry detecting GCP environment.\n */\nfunction detectGCPAvailableRetries() {\n  return process.env.DETECT_GCP_RETRIES ? Number(process.env.DETECT_GCP_RETRIES) : 0;\n}\nlet cachedIsAvailableResponse;\n/**\n * Determine if the metadata server is currently available.\n */\nasync function isAvailable() {\n  try {\n    // If a user is instantiating several GCP libraries at the same time,\n    // this may result in multiple calls to isAvailable(), to detect the\n    // runtime environment. We use the same promise for each of these calls\n    // to reduce the network load.\n    if (cachedIsAvailableResponse === undefined) {\n      cachedIsAvailableResponse = metadataAccessor('instance', undefined, detectGCPAvailableRetries(),\n      // If the default HOST_ADDRESS has been overridden, we should not\n      // make an effort to try SECONDARY_HOST_ADDRESS (as we are likely in\n      // a non-GCP environment):\n      !(process.env.GCE_METADATA_IP || process.env.GCE_METADATA_HOST));\n    }\n    await cachedIsAvailableResponse;\n    return true;\n  } catch (err) {\n    if (process.env.DEBUG_AUTH) {\n      console.info(err);\n    }\n    if (err.type === 'request-timeout') {\n      // If running in a GCP environment, metadata endpoint should return\n      // within ms.\n      return false;\n    }\n    if (err.response && err.response.status === 404) {\n      return false;\n    } else {\n      if (!(err.response && err.response.status === 404) && (\n      // A warning is emitted if we see an unexpected err.code, or err.code\n      // is not populated:\n      !err.code || !['EHOSTDOWN', 'EHOSTUNREACH', 'ENETUNREACH', 'ENOENT', 'ENOTFOUND', 'ECONNREFUSED'].includes(err.code))) {\n        let code = 'UNKNOWN';\n        if (err.code) code = err.code;\n        process.emitWarning(`received unexpected error = ${err.message} code = ${code}`, 'MetadataLookupWarning');\n      }\n      // Failure to resolve the metadata service means that it is not available.\n      return false;\n    }\n  }\n}\nexports.isAvailable = isAvailable;\n/**\n * reset the memoized isAvailable() lookup.\n */\nfunction resetIsAvailableCache() {\n  cachedIsAvailableResponse = undefined;\n}\nexports.resetIsAvailableCache = resetIsAvailableCache;\n/**\n * Obtain the timeout for requests to the metadata server.\n */\nfunction requestTimeout() {\n  // In testing, we were able to reproduce behavior similar to\n  // https://github.com/googleapis/google-auth-library-nodejs/issues/798\n  // by making many concurrent network requests. Requests do not actually fail,\n  // rather they take significantly longer to complete (and we hit our\n  // default 3000ms timeout).\n  //\n  // This logic detects a GCF environment, using the documented environment\n  // variables K_SERVICE and FUNCTION_NAME:\n  // https://cloud.google.com/functions/docs/env-var and, in a GCF environment\n  // eliminates timeouts (by setting the value to 0 to disable).\n  return process.env.K_SERVICE || process.env.FUNCTION_NAME ? 0 : 3000;\n}\nexports.requestTimeout = requestTimeout;","map":{"version":3,"names":["gaxios_1","require","jsonBigint","exports","BASE_PATH","HOST_ADDRESS","SECONDARY_HOST_ADDRESS","HEADER_NAME","HEADER_VALUE","HEADERS","Object","freeze","getBaseUrl","baseUrl","process","env","GCE_METADATA_IP","GCE_METADATA_HOST","test","URL","href","validate","options","keys","forEach","key","Error","metadataAccessor","type","noResponseRetries","fastFail","property","requestMethod","fastFailMetadataRequest","request","res","url","headers","assign","retryConfig","params","responseType","timeout","requestTimeout","toLowerCase","data","parse","_a","e","response","status","message","secondaryOptions","replace","responded","r1","then","catch","err","r2","Promise","race","instance","project","detectGCPAvailableRetries","DETECT_GCP_RETRIES","Number","cachedIsAvailableResponse","isAvailable","undefined","DEBUG_AUTH","console","info","code","includes","emitWarning","resetIsAvailableCache","K_SERVICE","FUNCTION_NAME"],"sources":["../../src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}