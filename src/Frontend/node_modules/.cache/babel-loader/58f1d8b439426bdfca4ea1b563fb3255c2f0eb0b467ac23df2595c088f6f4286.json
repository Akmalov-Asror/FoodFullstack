{"ast":null,"code":"\"use strict\";\n\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.googleProtobufValueFromProto3JSON = exports.googleProtobufListValueFromProto3JSON = exports.googleProtobufStructFromProto3JSON = exports.googleProtobufValueToProto3JSON = exports.googleProtobufListValueToProto3JSON = exports.googleProtobufStructToProto3JSON = void 0;\nconst util_1 = require(\"./util\");\nfunction googleProtobufStructToProto3JSON(obj) {\n  const result = {};\n  const fields = obj.fields;\n  for (const [key, value] of Object.entries(fields)) {\n    result[key] = googleProtobufValueToProto3JSON(value);\n  }\n  return result;\n}\nexports.googleProtobufStructToProto3JSON = googleProtobufStructToProto3JSON;\nfunction googleProtobufListValueToProto3JSON(obj) {\n  (0, util_1.assert)(Array.isArray(obj.values), 'ListValue internal representation must contain array of values');\n  return obj.values.map(googleProtobufValueToProto3JSON);\n}\nexports.googleProtobufListValueToProto3JSON = googleProtobufListValueToProto3JSON;\nfunction googleProtobufValueToProto3JSON(obj) {\n  if (Object.prototype.hasOwnProperty.call(obj, 'nullValue')) {\n    return null;\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, 'numberValue') && typeof obj.numberValue === 'number') {\n    if (!Number.isFinite(obj.numberValue)) {\n      return obj.numberValue.toString();\n    }\n    return obj.numberValue;\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, 'stringValue') && typeof obj.stringValue === 'string') {\n    return obj.stringValue;\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, 'boolValue') && typeof obj.boolValue === 'boolean') {\n    return obj.boolValue;\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, 'structValue') && typeof obj.structValue === 'object') {\n    return googleProtobufStructToProto3JSON(obj.structValue);\n  }\n  if (Object.prototype.hasOwnProperty.call(obj, 'listValue') && typeof obj === 'object' && typeof obj.listValue === 'object') {\n    return googleProtobufListValueToProto3JSON(obj.listValue);\n  }\n  // Assuming empty Value to be null\n  return null;\n}\nexports.googleProtobufValueToProto3JSON = googleProtobufValueToProto3JSON;\nfunction googleProtobufStructFromProto3JSON(json) {\n  const fields = {};\n  for (const [key, value] of Object.entries(json)) {\n    fields[key] = googleProtobufValueFromProto3JSON(value);\n  }\n  return {\n    fields\n  };\n}\nexports.googleProtobufStructFromProto3JSON = googleProtobufStructFromProto3JSON;\nfunction googleProtobufListValueFromProto3JSON(json) {\n  return {\n    values: json.map(element => googleProtobufValueFromProto3JSON(element))\n  };\n}\nexports.googleProtobufListValueFromProto3JSON = googleProtobufListValueFromProto3JSON;\nfunction googleProtobufValueFromProto3JSON(json) {\n  if (json === null) {\n    return {\n      nullValue: 'NULL_VALUE'\n    };\n  }\n  if (typeof json === 'number') {\n    return {\n      numberValue: json\n    };\n  }\n  if (typeof json === 'string') {\n    return {\n      stringValue: json\n    };\n  }\n  if (typeof json === 'boolean') {\n    return {\n      boolValue: json\n    };\n  }\n  if (Array.isArray(json)) {\n    return {\n      listValue: googleProtobufListValueFromProto3JSON(json)\n    };\n  }\n  if (typeof json === 'object') {\n    return {\n      structValue: googleProtobufStructFromProto3JSON(json)\n    };\n  }\n  throw new Error(`googleProtobufValueFromProto3JSON: incorrect parameter type: ${typeof json}`);\n}\nexports.googleProtobufValueFromProto3JSON = googleProtobufValueFromProto3JSON;","map":{"version":3,"names":["util_1","require","googleProtobufStructToProto3JSON","obj","result","fields","key","value","Object","entries","googleProtobufValueToProto3JSON","exports","googleProtobufListValueToProto3JSON","assert","Array","isArray","values","map","prototype","hasOwnProperty","call","numberValue","Number","isFinite","toString","stringValue","boolValue","structValue","listValue","googleProtobufStructFromProto3JSON","json","googleProtobufValueFromProto3JSON","googleProtobufListValueFromProto3JSON","element","nullValue","Error"],"sources":["../../typescript/src/value.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}