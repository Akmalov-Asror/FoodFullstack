{"ast":null,"code":"\"use strict\";\n\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapperFromProto3JSON = exports.wrapperToProto3JSON = void 0;\nconst bytes_1 = require(\"./bytes\");\nconst util_1 = require(\"./util\");\nfunction wrapperToProto3JSON(obj) {\n  if (!Object.prototype.hasOwnProperty.call(obj, 'value')) {\n    return null;\n  }\n  if (Buffer.isBuffer(obj.value) || obj.value instanceof Uint8Array) {\n    return (0, bytes_1.bytesToProto3JSON)(obj.value);\n  }\n  if (typeof obj.value === 'object') {\n    (0, util_1.assert)(obj.value.constructor.name === 'Long', `wrapperToProto3JSON: expected to see a number, a string, a boolean, or a Long, but got ${obj.value}`);\n    return obj.value.toString();\n  }\n  // JSON accept special string values \"NaN\", \"Infinity\", and \"-Infinity\".\n  if (typeof obj.value === 'number' && !Number.isFinite(obj.value)) {\n    return obj.value.toString();\n  }\n  return obj.value;\n}\nexports.wrapperToProto3JSON = wrapperToProto3JSON;\nfunction wrapperFromProto3JSON(typeName, json) {\n  if (json === null) {\n    return {\n      value: null\n    };\n  }\n  if (typeName === '.google.protobuf.BytesValue') {\n    if (typeof json !== 'string') {\n      throw new Error(`numberWrapperFromProto3JSON: expected to get a string for google.protobuf.BytesValue but got ${typeof json}`);\n    }\n    return {\n      value: (0, bytes_1.bytesFromProto3JSON)(json)\n    };\n  }\n  return {\n    value: json\n  };\n}\nexports.wrapperFromProto3JSON = wrapperFromProto3JSON;","map":{"version":3,"names":["bytes_1","require","util_1","wrapperToProto3JSON","obj","Object","prototype","hasOwnProperty","call","Buffer","isBuffer","value","Uint8Array","bytesToProto3JSON","assert","constructor","name","toString","Number","isFinite","exports","wrapperFromProto3JSON","typeName","json","Error","bytesFromProto3JSON"],"sources":["../../typescript/src/wrappers.ts"],"sourcesContent":[null],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAEA,MAAAA,OAAA,GAAAC,OAAA;AAEA,MAAAC,MAAA,GAAAD,OAAA;AAkBA,SAAgBE,mBAAmBA,CACjCC,GAA4E;EAE5E,IAAI,CAACC,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,GAAG,EAAE,OAAO,CAAC,EAAE;IACvD,OAAO,IAAI;;EAEb,IAAIK,MAAM,CAACC,QAAQ,CAACN,GAAG,CAACO,KAAK,CAAC,IAAIP,GAAG,CAACO,KAAK,YAAYC,UAAU,EAAE;IACjE,OAAO,IAAAZ,OAAA,CAAAa,iBAAiB,EAACT,GAAG,CAACO,KAAK,CAAC;;EAErC,IAAI,OAAOP,GAAG,CAACO,KAAK,KAAK,QAAQ,EAAE;IACjC,IAAAT,MAAA,CAAAY,MAAM,EACJV,GAAG,CAACO,KAAK,CAACI,WAAW,CAACC,IAAI,KAAK,MAAM,EACrC,0FAA0FZ,GAAG,CAACO,KAAK,EAAE,CACtG;IACD,OAAQP,GAAG,CAACO,KAAkB,CAACM,QAAQ,EAAE;;EAE3C;EACA,IAAI,OAAOb,GAAG,CAACO,KAAK,KAAK,QAAQ,IAAI,CAACO,MAAM,CAACC,QAAQ,CAACf,GAAG,CAACO,KAAK,CAAC,EAAE;IAChE,OAAOP,GAAG,CAACO,KAAK,CAACM,QAAQ,EAAE;;EAE7B,OAAOb,GAAG,CAACO,KAAK;AAClB;AArBAS,OAAA,CAAAjB,mBAAA,GAAAA,mBAAA;AAuBA,SAAgBkB,qBAAqBA,CACnCC,QAAgB,EAChBC,IAAsC;EAEtC,IAAIA,IAAI,KAAK,IAAI,EAAE;IACjB,OAAO;MACLZ,KAAK,EAAE;KACR;;EAEH,IAAIW,QAAQ,KAAK,6BAA6B,EAAE;IAC9C,IAAI,OAAOC,IAAI,KAAK,QAAQ,EAAE;MAC5B,MAAM,IAAIC,KAAK,CACb,gGAAgG,OAAOD,IAAI,EAAE,CAC9G;;IAEH,OAAO;MACLZ,KAAK,EAAE,IAAAX,OAAA,CAAAyB,mBAAmB,EAACF,IAAI;KAChC;;EAEH,OAAO;IACLZ,KAAK,EAAEY;GACR;AACH;AAtBAH,OAAA,CAAAC,qBAAA,GAAAA,qBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}