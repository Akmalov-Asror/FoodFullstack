{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResourceCollector = void 0;\n/**\n * ResourceCollector class implements asynchronous logic of calling the API call that supports pagination,\n * page by page, collecting all resources (up to `maxResults`) in the array.\n *\n * Usage:\n *   const resourceCollector = new ResourceCollector(apiCall, maxResults); // -1 for unlimited\n *   resourceCollector.processAllPages(request).then(resources => ...);\n */\nclass ResourceCollector {\n  constructor(apiCall, maxResults = -1) {\n    this.apiCall = apiCall;\n    this.resources = [];\n    this.maxResults = maxResults;\n  }\n  callback(err, resources, nextPageRequest) {\n    if (err) {\n      // Something went wrong with this request - failing everything\n      this.rejectCallback(err);\n      return;\n    }\n    // Process one page\n    for (const resource of resources) {\n      this.resources.push(resource);\n      if (this.resources.length === this.maxResults) {\n        nextPageRequest = null;\n        break;\n      }\n    }\n    // All done?\n    if (!nextPageRequest) {\n      this.resolveCallback(this.resources);\n      return;\n    }\n    // Schedule the next call\n    const callback = (...args) => this.callback(...args);\n    setImmediate(this.apiCall, nextPageRequest, callback);\n  }\n  processAllPages(firstRequest) {\n    return new Promise((resolve, reject) => {\n      this.resolveCallback = resolve;\n      this.rejectCallback = reject;\n      // Schedule the first call\n      const callback = (...args) => this.callback(...args);\n      setImmediate(this.apiCall, firstRequest, callback);\n    });\n  }\n}\nexports.ResourceCollector = ResourceCollector;","map":{"version":3,"names":["ResourceCollector","constructor","apiCall","maxResults","resources","callback","err","nextPageRequest","rejectCallback","resource","push","length","resolveCallback","args","setImmediate","processAllPages","firstRequest","Promise","resolve","reject","exports"],"sources":["../../../src/paginationCalls/resourceCollector.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAuBA;;;;;;;;AAQA,MAAaA,iBAAiB;EAO5BC,YAAYC,OAA+B,EAAEC,UAAU,GAAG,CAAC,CAAC;IAC1D,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACE,SAAS,GAAG,EAAE;IACnB,IAAI,CAACD,UAAU,GAAGA,UAAU;EAC9B;EAEQE,QAAQA,CACdC,GAAiB,EACjBF,SAAoB,EACpBG,eAAoC;IAEpC,IAAID,GAAG,EAAE;MACP;MACA,IAAI,CAACE,cAAe,CAACF,GAAG,CAAC;MACzB;;IAGF;IACA,KAAK,MAAMG,QAAQ,IAAIL,SAAS,EAAE;MAChC,IAAI,CAACA,SAAS,CAACM,IAAI,CAACD,QAAQ,CAAC;MAC7B,IAAI,IAAI,CAACL,SAAS,CAACO,MAAM,KAAK,IAAI,CAACR,UAAU,EAAE;QAC7CI,eAAe,GAAG,IAAI;QACtB;;;IAIJ;IACA,IAAI,CAACA,eAAe,EAAE;MACpB,IAAI,CAACK,eAAgB,CAAC,IAAI,CAACR,SAAS,CAAC;MACrC;;IAGF;IACA,MAAMC,QAAQ,GAAGA,CACf,GAAGQ,IAAoD,KACpD,IAAI,CAACR,QAAQ,CAAC,GAAGQ,IAAI,CAAC;IAC3BC,YAAY,CAAC,IAAI,CAACZ,OAAO,EAAEK,eAAe,EAAEF,QAAuB,CAAC;EACtE;EAEAU,eAAeA,CAACC,YAAyB;IACvC,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,IAAI,CAACP,eAAe,GAAGM,OAAO;MAC9B,IAAI,CAACV,cAAc,GAAGW,MAAM;MAE5B;MACA,MAAMd,QAAQ,GAAGA,CACf,GAAGQ,IAAoD,KACpD,IAAI,CAACR,QAAQ,CAAC,GAAGQ,IAAI,CAAC;MAC3BC,YAAY,CAAC,IAAI,CAACZ,OAAO,EAAEc,YAAY,EAAEX,QAAuB,CAAC;IACnE,CAAC,CAAC;EACJ;;AAzDFe,OAAA,CAAApB,iBAAA,GAAAA,iBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}