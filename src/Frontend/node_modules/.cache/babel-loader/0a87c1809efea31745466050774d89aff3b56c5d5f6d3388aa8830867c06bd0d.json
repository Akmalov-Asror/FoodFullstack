{"ast":null,"code":"\"use strict\";\n\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Gaxios = void 0;\nconst extend_1 = __importDefault(require(\"extend\"));\nconst https_1 = require(\"https\");\nconst node_fetch_1 = __importDefault(require(\"node-fetch\"));\nconst querystring_1 = __importDefault(require(\"querystring\"));\nconst is_stream_1 = __importDefault(require(\"is-stream\"));\nconst url_1 = require(\"url\");\nconst common_1 = require(\"./common\");\nconst retry_1 = require(\"./retry\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fetch = hasFetch() ? window.fetch : node_fetch_1.default;\nfunction hasWindow() {\n  return typeof window !== 'undefined' && !!window;\n}\nfunction hasFetch() {\n  return hasWindow() && !!window.fetch;\n}\nfunction hasBuffer() {\n  return typeof Buffer !== 'undefined';\n}\nfunction hasHeader(options, header) {\n  return !!getHeader(options, header);\n}\nfunction getHeader(options, header) {\n  header = header.toLowerCase();\n  for (const key of Object.keys((options === null || options === void 0 ? void 0 : options.headers) || {})) {\n    if (header === key.toLowerCase()) {\n      return options.headers[key];\n    }\n  }\n  return undefined;\n}\nlet HttpsProxyAgent;\nfunction loadProxy() {\n  const proxy = process.env.HTTPS_PROXY || process.env.https_proxy || process.env.HTTP_PROXY || process.env.http_proxy;\n  if (proxy) {\n    HttpsProxyAgent = require('https-proxy-agent');\n  }\n  return proxy;\n}\nloadProxy();\nfunction skipProxy(url) {\n  var _a;\n  const noProxyEnv = (_a = process.env.NO_PROXY) !== null && _a !== void 0 ? _a : process.env.no_proxy;\n  if (!noProxyEnv) {\n    return false;\n  }\n  const noProxyUrls = noProxyEnv.split(',');\n  const parsedURL = new url_1.URL(url);\n  return !!noProxyUrls.find(url => {\n    if (url.startsWith('*.') || url.startsWith('.')) {\n      url = url.replace(/^\\*\\./, '.');\n      return parsedURL.hostname.endsWith(url);\n    } else {\n      return url === parsedURL.origin || url === parsedURL.hostname;\n    }\n  });\n}\n// Figure out if we should be using a proxy. Only if it's required, load\n// the https-proxy-agent module as it adds startup cost.\nfunction getProxy(url) {\n  // If there is a match between the no_proxy env variables and the url, then do not proxy\n  if (skipProxy(url)) {\n    return undefined;\n    // If there is not a match between the no_proxy env variables and the url, check to see if there should be a proxy\n  } else {\n    return loadProxy();\n  }\n}\nclass Gaxios {\n  /**\n   * The Gaxios class is responsible for making HTTP requests.\n   * @param defaults The default set of options to be used for this instance.\n   */\n  constructor(defaults) {\n    this.agentCache = new Map();\n    this.defaults = defaults || {};\n  }\n  /**\n   * Perform an HTTP request with the given options.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async request(opts = {}) {\n    opts = this.validateOpts(opts);\n    return this._request(opts);\n  }\n  async _defaultAdapter(opts) {\n    const fetchImpl = opts.fetchImplementation || fetch;\n    const res = await fetchImpl(opts.url, opts);\n    const data = await this.getResponseData(opts, res);\n    return this.translateResponse(opts, res, data);\n  }\n  /**\n   * Internal, retryable version of the `request` method.\n   * @param opts Set of HTTP options that will be used for this HTTP request.\n   */\n  async _request(opts = {}) {\n    try {\n      let translatedResponse;\n      if (opts.adapter) {\n        translatedResponse = await opts.adapter(opts, this._defaultAdapter.bind(this));\n      } else {\n        translatedResponse = await this._defaultAdapter(opts);\n      }\n      if (!opts.validateStatus(translatedResponse.status)) {\n        throw new common_1.GaxiosError(`Request failed with status code ${translatedResponse.status}`, opts, translatedResponse);\n      }\n      return translatedResponse;\n    } catch (e) {\n      const err = e;\n      err.config = opts;\n      const {\n        shouldRetry,\n        config\n      } = await retry_1.getRetryConfig(e);\n      if (shouldRetry && config) {\n        err.config.retryConfig.currentRetryAttempt = config.retryConfig.currentRetryAttempt;\n        return this._request(err.config);\n      }\n      throw err;\n    }\n  }\n  async getResponseData(opts, res) {\n    switch (opts.responseType) {\n      case 'stream':\n        return res.body;\n      case 'json':\n        {\n          let data = await res.text();\n          try {\n            data = JSON.parse(data);\n          } catch (_a) {\n            // continue\n          }\n          return data;\n        }\n      case 'arraybuffer':\n        return res.arrayBuffer();\n      case 'blob':\n        return res.blob();\n      default:\n        return res.text();\n    }\n  }\n  /**\n   * Validates the options, and merges them with defaults.\n   * @param opts The original options passed from the client.\n   */\n  validateOpts(options) {\n    const opts = extend_1.default(true, {}, this.defaults, options);\n    if (!opts.url) {\n      throw new Error('URL is required.');\n    }\n    // baseUrl has been deprecated, remove in 2.0\n    const baseUrl = opts.baseUrl || opts.baseURL;\n    if (baseUrl) {\n      opts.url = baseUrl + opts.url;\n    }\n    opts.paramsSerializer = opts.paramsSerializer || this.paramsSerializer;\n    if (opts.params && Object.keys(opts.params).length > 0) {\n      let additionalQueryParams = opts.paramsSerializer(opts.params);\n      if (additionalQueryParams.startsWith('?')) {\n        additionalQueryParams = additionalQueryParams.slice(1);\n      }\n      const prefix = opts.url.includes('?') ? '&' : '?';\n      opts.url = opts.url + prefix + additionalQueryParams;\n    }\n    if (typeof options.maxContentLength === 'number') {\n      opts.size = options.maxContentLength;\n    }\n    if (typeof options.maxRedirects === 'number') {\n      opts.follow = options.maxRedirects;\n    }\n    opts.headers = opts.headers || {};\n    if (opts.data) {\n      const isFormData = typeof FormData === 'undefined' ? false : (opts === null || opts === void 0 ? void 0 : opts.data) instanceof FormData;\n      if (is_stream_1.default.readable(opts.data)) {\n        opts.body = opts.data;\n      } else if (hasBuffer() && Buffer.isBuffer(opts.data)) {\n        // Do not attempt to JSON.stringify() a Buffer:\n        opts.body = opts.data;\n        if (!hasHeader(opts, 'Content-Type')) {\n          opts.headers['Content-Type'] = 'application/json';\n        }\n      } else if (typeof opts.data === 'object') {\n        // If www-form-urlencoded content type has been set, but data is\n        // provided as an object, serialize the content using querystring:\n        if (!isFormData) {\n          if (getHeader(opts, 'content-type') === 'application/x-www-form-urlencoded') {\n            opts.body = opts.paramsSerializer(opts.data);\n          } else {\n            // } else if (!(opts.data instanceof FormData)) {\n            if (!hasHeader(opts, 'Content-Type')) {\n              opts.headers['Content-Type'] = 'application/json';\n            }\n            opts.body = JSON.stringify(opts.data);\n          }\n        }\n      } else {\n        opts.body = opts.data;\n      }\n    }\n    opts.validateStatus = opts.validateStatus || this.validateStatus;\n    opts.responseType = opts.responseType || 'json';\n    if (!opts.headers['Accept'] && opts.responseType === 'json') {\n      opts.headers['Accept'] = 'application/json';\n    }\n    opts.method = opts.method || 'GET';\n    const proxy = getProxy(opts.url);\n    if (proxy) {\n      if (this.agentCache.has(proxy)) {\n        opts.agent = this.agentCache.get(proxy);\n      } else {\n        // Proxy is being used in conjunction with mTLS.\n        if (opts.cert && opts.key) {\n          const parsedURL = new url_1.URL(proxy);\n          opts.agent = new HttpsProxyAgent({\n            port: parsedURL.port,\n            host: parsedURL.host,\n            protocol: parsedURL.protocol,\n            cert: opts.cert,\n            key: opts.key\n          });\n        } else {\n          opts.agent = new HttpsProxyAgent(proxy);\n        }\n        this.agentCache.set(proxy, opts.agent);\n      }\n    } else if (opts.cert && opts.key) {\n      // Configure client for mTLS:\n      if (this.agentCache.has(opts.key)) {\n        opts.agent = this.agentCache.get(opts.key);\n      } else {\n        opts.agent = new https_1.Agent({\n          cert: opts.cert,\n          key: opts.key\n        });\n        this.agentCache.set(opts.key, opts.agent);\n      }\n    }\n    return opts;\n  }\n  /**\n   * By default, throw for any non-2xx status code\n   * @param status status code from the HTTP response\n   */\n  validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n  /**\n   * Encode a set of key/value pars into a querystring format (?foo=bar&baz=boo)\n   * @param params key value pars to encode\n   */\n  paramsSerializer(params) {\n    return querystring_1.default.stringify(params);\n  }\n  translateResponse(opts, res, data) {\n    // headers need to be converted from a map to an obj\n    const headers = {};\n    res.headers.forEach((value, key) => {\n      headers[key] = value;\n    });\n    return {\n      config: opts,\n      data: data,\n      headers,\n      status: res.status,\n      statusText: res.statusText,\n      // XMLHttpRequestLike\n      request: {\n        responseURL: res.url\n      }\n    };\n  }\n}\nexports.Gaxios = Gaxios;","map":{"version":3,"names":["extend_1","__importDefault","require","https_1","node_fetch_1","querystring_1","is_stream_1","url_1","common_1","retry_1","fetch","hasFetch","window","default","hasWindow","hasBuffer","Buffer","hasHeader","options","header","getHeader","toLowerCase","key","Object","keys","headers","undefined","HttpsProxyAgent","loadProxy","proxy","process","env","HTTPS_PROXY","https_proxy","HTTP_PROXY","http_proxy","skipProxy","url","noProxyEnv","_a","NO_PROXY","no_proxy","noProxyUrls","split","parsedURL","URL","find","startsWith","replace","hostname","endsWith","origin","getProxy","Gaxios","constructor","defaults","agentCache","Map","request","opts","validateOpts","_request","_defaultAdapter","fetchImpl","fetchImplementation","res","data","getResponseData","translateResponse","translatedResponse","adapter","bind","validateStatus","status","GaxiosError","e","err","config","shouldRetry","getRetryConfig","retryConfig","currentRetryAttempt","responseType","body","text","JSON","parse","arrayBuffer","blob","Error","baseUrl","baseURL","paramsSerializer","params","length","additionalQueryParams","slice","prefix","includes","maxContentLength","size","maxRedirects","follow","isFormData","FormData","readable","isBuffer","stringify","method","has","agent","get","cert","port","host","protocol","set","Agent","forEach","value","statusText","responseURL","exports"],"sources":["../../src/gaxios.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}