{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.decodeResponse = exports.encodeRequest = void 0;\n// proto-over-HTTP request encoding and decoding\nconst fallback_1 = require(\"./fallback\");\nconst googleError_1 = require(\"./googleError\");\nfunction encodeRequest(rpc, protocol, servicePath, servicePort, request) {\n  const protoNamespaces = [];\n  let currNamespace = rpc.parent;\n  while (currNamespace.name !== '') {\n    protoNamespaces.unshift(currNamespace.name);\n    currNamespace = currNamespace.parent;\n  }\n  const protoServiceName = protoNamespaces.join('.');\n  const rpcName = rpc.name;\n  const headers = {\n    'Content-Type': 'application/x-protobuf'\n  };\n  const method = 'post';\n  const requestMessage = rpc.resolvedRequestType.fromObject(request);\n  const body = rpc.resolvedRequestType.encode(requestMessage).finish();\n  const url = `${protocol}://${servicePath}:${servicePort}/$rpc/${protoServiceName}/${rpcName}`;\n  return {\n    method,\n    url,\n    headers,\n    body\n  };\n}\nexports.encodeRequest = encodeRequest;\nfunction decodeResponse(rpc, ok, response) {\n  if (!ok) {\n    const statusDecoder = new googleError_1.GoogleErrorDecoder();\n    const error = statusDecoder.decodeErrorFromBuffer(response);\n    throw error;\n  }\n  const buffer = response instanceof ArrayBuffer ? new Uint8Array(response) : response;\n  const message = rpc.resolvedResponseType.decode(buffer);\n  return rpc.resolvedResponseType.toObject(message, fallback_1.defaultToObjectOptions);\n}\nexports.decodeResponse = decodeResponse;","map":{"version":3,"names":["fallback_1","require","googleError_1","encodeRequest","rpc","protocol","servicePath","servicePort","request","protoNamespaces","currNamespace","parent","name","unshift","protoServiceName","join","rpcName","headers","method","requestMessage","resolvedRequestType","fromObject","body","encode","finish","url","exports","decodeResponse","ok","response","statusDecoder","GoogleErrorDecoder","error","decodeErrorFromBuffer","buffer","ArrayBuffer","Uint8Array","message","resolvedResponseType","decode","toObject","defaultToObjectOptions"],"sources":["../../src/fallbackProto.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAgBA;AAEA,MAAAA,UAAA,GAAAC,OAAA;AAEA,MAAAC,aAAA,GAAAD,OAAA;AAEA,SAAgBE,aAAaA,CAC3BC,GAAoB,EACpBC,QAAgB,EAChBC,WAAmB,EACnBC,WAAmB,EACnBC,OAAW;EAEX,MAAMC,eAAe,GAAa,EAAE;EACpC,IAAIC,aAAa,GAAGN,GAAG,CAACO,MAAO;EAC/B,OAAOD,aAAa,CAACE,IAAI,KAAK,EAAE,EAAE;IAChCH,eAAe,CAACI,OAAO,CAACH,aAAa,CAACE,IAAI,CAAC;IAC3CF,aAAa,GAAGA,aAAa,CAACC,MAAO;;EAEvC,MAAMG,gBAAgB,GAAGL,eAAe,CAACM,IAAI,CAAC,GAAG,CAAC;EAClD,MAAMC,OAAO,GAAGZ,GAAG,CAACQ,IAAI;EAExB,MAAMK,OAAO,GAA4B;IACvC,cAAc,EAAE;GACjB;EAED,MAAMC,MAAM,GAAG,MAAM;EACrB,MAAMC,cAAc,GAAGf,GAAG,CAACgB,mBAAoB,CAACC,UAAU,CAACb,OAAO,CAAC;EACnE,MAAMc,IAAI,GAAGlB,GAAG,CAACgB,mBAAoB,CAACG,MAAM,CAACJ,cAAc,CAAC,CAACK,MAAM,EAAE;EACrE,MAAMC,GAAG,GAAG,GAAGpB,QAAQ,MAAMC,WAAW,IAAIC,WAAW,SAASO,gBAAgB,IAAIE,OAAO,EAAE;EAE7F,OAAO;IACLE,MAAM;IACNO,GAAG;IACHR,OAAO;IACPK;GACD;AACH;AA/BAI,OAAA,CAAAvB,aAAA,GAAAA,aAAA;AAiCA,SAAgBwB,cAAcA,CAC5BvB,GAAoB,EACpBwB,EAAW,EACXC,QAA8B;EAE9B,IAAI,CAACD,EAAE,EAAE;IACP,MAAME,aAAa,GAAG,IAAI5B,aAAA,CAAA6B,kBAAkB,EAAE;IAC9C,MAAMC,KAAK,GAAGF,aAAa,CAACG,qBAAqB,CAACJ,QAAQ,CAAC;IAC3D,MAAMG,KAAK;;EAGb,MAAME,MAAM,GACVL,QAAQ,YAAYM,WAAW,GAAG,IAAIC,UAAU,CAACP,QAAQ,CAAC,GAAGA,QAAQ;EACvE,MAAMQ,OAAO,GAAGjC,GAAG,CAACkC,oBAAqB,CAACC,MAAM,CAACL,MAAM,CAAC;EACxD,OAAO9B,GAAG,CAACkC,oBAAqB,CAACE,QAAQ,CAACH,OAAO,EAAErC,UAAA,CAAAyC,sBAAsB,CAAC;AAC5E;AAfAf,OAAA,CAAAC,cAAA,GAAAA,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}