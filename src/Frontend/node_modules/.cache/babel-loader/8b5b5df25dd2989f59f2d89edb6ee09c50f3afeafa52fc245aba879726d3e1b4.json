{"ast":null,"code":"\"use strict\";\n\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromProto3JSON = exports.fromProto3JSONToInternalRepresentation = void 0;\nconst any_1 = require(\"./any\");\nconst bytes_1 = require(\"./bytes\");\nconst enum_1 = require(\"./enum\");\nconst value_1 = require(\"./value\");\nconst util_1 = require(\"./util\");\nconst duration_1 = require(\"./duration\");\nconst timestamp_1 = require(\"./timestamp\");\nconst wrappers_1 = require(\"./wrappers\");\nconst fieldmask_1 = require(\"./fieldmask\");\nfunction fromProto3JSONToInternalRepresentation(type, json) {\n  const fullyQualifiedTypeName = typeof type === 'string' ? type : (0, util_1.getFullyQualifiedTypeName)(type);\n  if (typeof type !== 'string' && 'values' in type) {\n    // type is an Enum\n    if (fullyQualifiedTypeName === '.google.protobuf.NullValue') {\n      return 'NULL_VALUE';\n    }\n    return (0, enum_1.resolveEnumValueToString)(type, json);\n  }\n  if (typeof type !== 'string') {\n    type.resolveAll();\n  }\n  if (typeof type === 'string') {\n    return json;\n  }\n  // Types that require special handling according to\n  // https://developers.google.com/protocol-buffers/docs/proto3#json\n  // Types that can have meaningful \"null\" value\n  if (fullyQualifiedTypeName === '.google.protobuf.Value') {\n    return (0, value_1.googleProtobufValueFromProto3JSON)(json);\n  }\n  if (util_1.wrapperTypes.has(fullyQualifiedTypeName)) {\n    if (json !== null && typeof json === 'object' || Array.isArray(json)) {\n      throw new Error(`fromProto3JSONToInternalRepresentation: JSON representation for ${fullyQualifiedTypeName} expects a string, a number, or a boolean, but got ${typeof json}`);\n    }\n    return (0, wrappers_1.wrapperFromProto3JSON)(fullyQualifiedTypeName, json);\n  }\n  if (json === null) {\n    return null;\n  }\n  // Types that cannot be \"null\"\n  if (fullyQualifiedTypeName === '.google.protobuf.Any') {\n    return (0, any_1.googleProtobufAnyFromProto3JSON)(type.root, json);\n  }\n  if (fullyQualifiedTypeName === '.google.protobuf.Struct') {\n    if (typeof json !== 'object') {\n      throw new Error(`fromProto3JSONToInternalRepresentation: google.protobuf.Struct must be an object but got ${typeof json}`);\n    }\n    if (Array.isArray(json)) {\n      throw new Error('fromProto3JSONToInternalRepresentation: google.protobuf.Struct must be an object but got an array');\n    }\n    return (0, value_1.googleProtobufStructFromProto3JSON)(json);\n  }\n  if (fullyQualifiedTypeName === '.google.protobuf.ListValue') {\n    if (!Array.isArray(json)) {\n      throw new Error(`fromProto3JSONToInternalRepresentation: google.protobuf.ListValue must be an array but got ${typeof json}`);\n    }\n    return (0, value_1.googleProtobufListValueFromProto3JSON)(json);\n  }\n  if (fullyQualifiedTypeName === '.google.protobuf.Duration') {\n    if (typeof json !== 'string') {\n      throw new Error(`fromProto3JSONToInternalRepresentation: google.protobuf.Duration must be a string but got ${typeof json}`);\n    }\n    return (0, duration_1.googleProtobufDurationFromProto3JSON)(json);\n  }\n  if (fullyQualifiedTypeName === '.google.protobuf.Timestamp') {\n    if (typeof json !== 'string') {\n      throw new Error(`fromProto3JSONToInternalRepresentation: google.protobuf.Timestamp must be a string but got ${typeof json}`);\n    }\n    return (0, timestamp_1.googleProtobufTimestampFromProto3JSON)(json);\n  }\n  if (fullyQualifiedTypeName === '.google.protobuf.FieldMask') {\n    if (typeof json !== 'string') {\n      throw new Error(`fromProto3JSONToInternalRepresentation: google.protobuf.FieldMask must be a string but got ${typeof json}`);\n    }\n    return (0, fieldmask_1.googleProtobufFieldMaskFromProto3JSON)(json);\n  }\n  const result = {};\n  for (const [key, value] of Object.entries(json)) {\n    const field = type.fields[key];\n    if (!field) {\n      continue;\n    }\n    const resolvedType = field.resolvedType;\n    const fieldType = field.type;\n    if (field.repeated) {\n      if (!Array.isArray(value)) {\n        throw new Error(`fromProto3JSONToInternalRepresentation: expected an array for field ${key}`);\n      }\n      result[key] = value.map(element => fromProto3JSONToInternalRepresentation(resolvedType || fieldType, element));\n    } else if (field.map) {\n      const map = {};\n      for (const [mapKey, mapValue] of Object.entries(value)) {\n        map[mapKey] = fromProto3JSONToInternalRepresentation(resolvedType || fieldType, mapValue);\n      }\n      result[key] = map;\n    } else if (fieldType.match(/^(?:(?:(?:u?int|fixed)(?:32|64))|float|double)$/)) {\n      if (typeof value !== 'number' && typeof value !== 'string') {\n        throw new Error(`fromProto3JSONToInternalRepresentation: field ${key} of type ${field.type} cannot contain value ${value}`);\n      }\n      result[key] = value;\n    } else if (fieldType === 'string') {\n      if (typeof value !== 'string') {\n        throw new Error(`fromProto3JSONToInternalRepresentation: field ${key} of type ${field.type} cannot contain value ${value}`);\n      }\n      result[key] = value;\n    } else if (fieldType === 'bool') {\n      if (typeof value !== 'boolean') {\n        throw new Error(`fromProto3JSONToInternalRepresentation: field ${key} of type ${field.type} cannot contain value ${value}`);\n      }\n      result[key] = value;\n    } else if (fieldType === 'bytes') {\n      if (typeof value !== 'string') {\n        throw new Error(`fromProto3JSONToInternalRepresentation: field ${key} of type ${field.type} cannot contain value ${value}`);\n      }\n      result[key] = (0, bytes_1.bytesFromProto3JSON)(value);\n    } else {\n      // Message type\n      (0, util_1.assert)(resolvedType !== null, `Expected to be able to resolve type for field ${field.name}`);\n      const deserializedValue = fromProto3JSONToInternalRepresentation(resolvedType, value);\n      result[key] = deserializedValue;\n    }\n  }\n  return result;\n}\nexports.fromProto3JSONToInternalRepresentation = fromProto3JSONToInternalRepresentation;\nfunction fromProto3JSON(type, json) {\n  const internalRepr = fromProto3JSONToInternalRepresentation(type, json);\n  if (internalRepr === null) {\n    return null;\n  }\n  // We only expect a real object here sine all special cases should be already resolved. Everything else is an internal error\n  (0, util_1.assert)(typeof internalRepr === 'object' && !Array.isArray(internalRepr), `fromProto3JSON: expected an object, not ${json}`);\n  return type.fromObject(internalRepr);\n}\nexports.fromProto3JSON = fromProto3JSON;","map":{"version":3,"names":["any_1","require","bytes_1","enum_1","value_1","util_1","duration_1","timestamp_1","wrappers_1","fieldmask_1","fromProto3JSONToInternalRepresentation","type","json","fullyQualifiedTypeName","getFullyQualifiedTypeName","resolveEnumValueToString","resolveAll","googleProtobufValueFromProto3JSON","wrapperTypes","has","Array","isArray","Error","wrapperFromProto3JSON","googleProtobufAnyFromProto3JSON","root","googleProtobufStructFromProto3JSON","googleProtobufListValueFromProto3JSON","googleProtobufDurationFromProto3JSON","googleProtobufTimestampFromProto3JSON","googleProtobufFieldMaskFromProto3JSON","result","key","value","Object","entries","field","fields","resolvedType","fieldType","repeated","map","element","mapKey","mapValue","match","bytesFromProto3JSON","assert","name","deserializedValue","exports","fromProto3JSON","internalRepr","fromObject"],"sources":["../../typescript/src/fromproto3json.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}