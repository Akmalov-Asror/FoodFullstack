{"ast":null,"code":"\"use strict\";\n\n// Copyright 2018 Google LLC\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//    http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getRetryConfig = void 0;\nasync function getRetryConfig(err) {\n  var _a;\n  let config = getConfig(err);\n  if (!err || !err.config || !config && !err.config.retry) {\n    return {\n      shouldRetry: false\n    };\n  }\n  config = config || {};\n  config.currentRetryAttempt = config.currentRetryAttempt || 0;\n  config.retry = config.retry === undefined || config.retry === null ? 3 : config.retry;\n  config.httpMethodsToRetry = config.httpMethodsToRetry || ['GET', 'HEAD', 'PUT', 'OPTIONS', 'DELETE'];\n  config.noResponseRetries = config.noResponseRetries === undefined || config.noResponseRetries === null ? 2 : config.noResponseRetries;\n  // If this wasn't in the list of status codes where we want\n  // to automatically retry, return.\n  const retryRanges = [\n  // https://en.wikipedia.org/wiki/List_of_HTTP_status_codes\n  // 1xx - Retry (Informational, request still processing)\n  // 2xx - Do not retry (Success)\n  // 3xx - Do not retry (Redirect)\n  // 4xx - Do not retry (Client errors)\n  // 429 - Retry (\"Too Many Requests\")\n  // 5xx - Retry (Server errors)\n  [100, 199], [429, 429], [500, 599]];\n  config.statusCodesToRetry = config.statusCodesToRetry || retryRanges;\n  // Put the config back into the err\n  err.config.retryConfig = config;\n  // Determine if we should retry the request\n  const shouldRetryFn = config.shouldRetry || shouldRetryRequest;\n  if (!(await shouldRetryFn(err))) {\n    return {\n      shouldRetry: false,\n      config: err.config\n    };\n  }\n  // Calculate time to wait with exponential backoff.\n  // If this is the first retry, look for a configured retryDelay.\n  const retryDelay = config.currentRetryAttempt ? 0 : (_a = config.retryDelay) !== null && _a !== void 0 ? _a : 100;\n  // Formula: retryDelay + ((2^c - 1 / 2) * 1000)\n  const delay = retryDelay + (Math.pow(2, config.currentRetryAttempt) - 1) / 2 * 1000;\n  // We're going to retry!  Incremenent the counter.\n  err.config.retryConfig.currentRetryAttempt += 1;\n  // Create a promise that invokes the retry after the backOffDelay\n  const backoff = new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n  // Notify the user if they added an `onRetryAttempt` handler\n  if (config.onRetryAttempt) {\n    config.onRetryAttempt(err);\n  }\n  // Return the promise in which recalls Gaxios to retry the request\n  await backoff;\n  return {\n    shouldRetry: true,\n    config: err.config\n  };\n}\nexports.getRetryConfig = getRetryConfig;\n/**\n * Determine based on config if we should retry the request.\n * @param err The GaxiosError passed to the interceptor.\n */\nfunction shouldRetryRequest(err) {\n  const config = getConfig(err);\n  // node-fetch raises an AbortError if signaled:\n  // https://github.com/bitinn/node-fetch#request-cancellation-with-abortsignal\n  if (err.name === 'AbortError') {\n    return false;\n  }\n  // If there's no config, or retries are disabled, return.\n  if (!config || config.retry === 0) {\n    return false;\n  }\n  // Check if this error has no response (ETIMEDOUT, ENOTFOUND, etc)\n  if (!err.response && (config.currentRetryAttempt || 0) >= config.noResponseRetries) {\n    return false;\n  }\n  // Only retry with configured HttpMethods.\n  if (!err.config.method || config.httpMethodsToRetry.indexOf(err.config.method.toUpperCase()) < 0) {\n    return false;\n  }\n  // If this wasn't in the list of status codes where we want\n  // to automatically retry, return.\n  if (err.response && err.response.status) {\n    let isInRange = false;\n    for (const [min, max] of config.statusCodesToRetry) {\n      const status = err.response.status;\n      if (status >= min && status <= max) {\n        isInRange = true;\n        break;\n      }\n    }\n    if (!isInRange) {\n      return false;\n    }\n  }\n  // If we are out of retry attempts, return\n  config.currentRetryAttempt = config.currentRetryAttempt || 0;\n  if (config.currentRetryAttempt >= config.retry) {\n    return false;\n  }\n  return true;\n}\n/**\n * Acquire the raxConfig object from an GaxiosError if available.\n * @param err The Gaxios error with a config object.\n */\nfunction getConfig(err) {\n  if (err && err.config && err.config.retryConfig) {\n    return err.config.retryConfig;\n  }\n  return;\n}","map":{"version":3,"names":["getRetryConfig","err","config","getConfig","retry","shouldRetry","currentRetryAttempt","undefined","httpMethodsToRetry","noResponseRetries","retryRanges","statusCodesToRetry","retryConfig","shouldRetryFn","shouldRetryRequest","retryDelay","_a","delay","Math","pow","backoff","Promise","resolve","setTimeout","onRetryAttempt","exports","name","response","method","indexOf","toUpperCase","status","isInRange","min","max"],"sources":["../../src/retry.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}