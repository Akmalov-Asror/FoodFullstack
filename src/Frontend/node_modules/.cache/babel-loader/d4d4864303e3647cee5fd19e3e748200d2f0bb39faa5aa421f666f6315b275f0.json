{"ast":null,"code":"\"use strict\";\n\nmodule.exports = EventEmitter;\n\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\nfunction EventEmitter() {\n  /**\r\n   * Registered listeners.\r\n   * @type {Object.<string,*>}\r\n   * @private\r\n   */\n  this._listeners = {};\n}\n\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\n  (this._listeners[evt] || (this._listeners[evt] = [])).push({\n    fn: fn,\n    ctx: ctx || this\n  });\n  return this;\n};\n\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\nEventEmitter.prototype.off = function off(evt, fn) {\n  if (evt === undefined) this._listeners = {};else {\n    if (fn === undefined) this._listeners[evt] = [];else {\n      var listeners = this._listeners[evt];\n      for (var i = 0; i < listeners.length;) if (listeners[i].fn === fn) listeners.splice(i, 1);else ++i;\n    }\n  }\n  return this;\n};\n\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\nEventEmitter.prototype.emit = function emit(evt) {\n  var listeners = this._listeners[evt];\n  if (listeners) {\n    var args = [],\n      i = 1;\n    for (; i < arguments.length;) args.push(arguments[i++]);\n    for (i = 0; i < listeners.length;) listeners[i].fn.apply(listeners[i++].ctx, args);\n  }\n  return this;\n};","map":{"version":3,"names":["module","exports","EventEmitter","_listeners","prototype","on","evt","fn","ctx","push","off","undefined","listeners","i","length","splice","emit","args","arguments","apply"],"sources":["C:/Users/ergas/OneDrive/Рабочий стол/inno/FoodFullstack/src/Frontend/node_modules/@protobufjs/eventemitter/index.js"],"sourcesContent":["\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,OAAO,GAAGC,YAAY;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,YAAYA,CAAA,EAAG;EAEpB;AACJ;AACA;AACA;AACA;EACI,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,YAAY,CAACE,SAAS,CAACC,EAAE,GAAG,SAASA,EAAEA,CAACC,GAAG,EAAEC,EAAE,EAAEC,GAAG,EAAE;EAClD,CAAC,IAAI,CAACL,UAAU,CAACG,GAAG,CAAC,KAAK,IAAI,CAACH,UAAU,CAACG,GAAG,CAAC,GAAG,EAAE,CAAC,EAAEG,IAAI,CAAC;IACvDF,EAAE,EAAIA,EAAE;IACRC,GAAG,EAAGA,GAAG,IAAI;EACjB,CAAC,CAAC;EACF,OAAO,IAAI;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAN,YAAY,CAACE,SAAS,CAACM,GAAG,GAAG,SAASA,GAAGA,CAACJ,GAAG,EAAEC,EAAE,EAAE;EAC/C,IAAID,GAAG,KAAKK,SAAS,EACjB,IAAI,CAACR,UAAU,GAAG,CAAC,CAAC,CAAC,KACpB;IACD,IAAII,EAAE,KAAKI,SAAS,EAChB,IAAI,CAACR,UAAU,CAACG,GAAG,CAAC,GAAG,EAAE,CAAC,KACzB;MACD,IAAIM,SAAS,GAAG,IAAI,CAACT,UAAU,CAACG,GAAG,CAAC;MACpC,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,CAACE,MAAM,GAChC,IAAIF,SAAS,CAACC,CAAC,CAAC,CAACN,EAAE,KAAKA,EAAE,EACtBK,SAAS,CAACG,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC,CAAC,KAEvB,EAAEA,CAAC;IACf;EACJ;EACA,OAAO,IAAI;AACf,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACAX,YAAY,CAACE,SAAS,CAACY,IAAI,GAAG,SAASA,IAAIA,CAACV,GAAG,EAAE;EAC7C,IAAIM,SAAS,GAAG,IAAI,CAACT,UAAU,CAACG,GAAG,CAAC;EACpC,IAAIM,SAAS,EAAE;IACX,IAAIK,IAAI,GAAG,EAAE;MACTJ,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAGK,SAAS,CAACJ,MAAM,GACvBG,IAAI,CAACR,IAAI,CAACS,SAAS,CAACL,CAAC,EAAE,CAAC,CAAC;IAC7B,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,CAACE,MAAM,GAC5BF,SAAS,CAACC,CAAC,CAAC,CAACN,EAAE,CAACY,KAAK,CAACP,SAAS,CAACC,CAAC,EAAE,CAAC,CAACL,GAAG,EAAES,IAAI,CAAC;EACvD;EACA,OAAO,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}