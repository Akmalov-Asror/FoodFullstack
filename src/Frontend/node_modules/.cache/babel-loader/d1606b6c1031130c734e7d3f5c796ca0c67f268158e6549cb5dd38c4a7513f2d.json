{"ast":null,"code":"\"use strict\";\n\n// Copyright 2021 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveEnumValueToString = void 0;\nfunction resolveEnumValueToString(enumType, enumValue) {\n  // for unknown enum values, do not fail and try to do the best we could.\n  // protobuf.js fromObject() will likely ignore unknown values, but at least\n  // we won't fail.\n  if (typeof enumValue === 'number') {\n    const value = enumType.valuesById[enumValue];\n    if (typeof value === 'undefined') {\n      // unknown value, cannot convert to string, returning number as is\n      return enumValue;\n    }\n    return value;\n  }\n  if (typeof enumValue === 'string') {\n    // for strings, just accept what we got\n    return enumValue;\n  }\n  throw new Error('resolveEnumValueToString: enum value must be a string or a number');\n}\nexports.resolveEnumValueToString = resolveEnumValueToString;","map":{"version":3,"names":["resolveEnumValueToString","enumType","enumValue","value","valuesById","Error","exports"],"sources":["../../typescript/src/enum.ts"],"sourcesContent":[null],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA,SAAgBA,wBAAwBA,CACtCC,QAAuB,EACvBC,SAAoB;EAEpB;EACA;EACA;EACA,IAAI,OAAOA,SAAS,KAAK,QAAQ,EAAE;IACjC,MAAMC,KAAK,GAAGF,QAAQ,CAACG,UAAU,CAACF,SAAS,CAAC;IAC5C,IAAI,OAAOC,KAAK,KAAK,WAAW,EAAE;MAChC;MACA,OAAOD,SAAS;;IAElB,OAAOC,KAAK;;EAEd,IAAI,OAAOD,SAAS,KAAK,QAAQ,EAAE;IACjC;IACA,OAAOA,SAAS;;EAElB,MAAM,IAAIG,KAAK,CACb,mEAAmE,CACpE;AACH;AAtBAC,OAAA,CAAAN,wBAAA,GAAAA,wBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}