{"ast":null,"code":"\"use strict\";\n\nmodule.exports = Service;\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n  if (typeof rpcImpl !== \"function\") throw TypeError(\"rpcImpl must be a function\");\n  util.EventEmitter.call(this);\n\n  /**\n   * RPC implementation. Becomes `null` once the service is ended.\n   * @type {RPCImpl|null}\n   */\n  this.rpcImpl = rpcImpl;\n\n  /**\n   * Whether requests are length-delimited.\n   * @type {boolean}\n   */\n  this.requestDelimited = Boolean(requestDelimited);\n\n  /**\n   * Whether responses are length-delimited.\n   * @type {boolean}\n   */\n  this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n  if (!request) throw TypeError(\"request must be specified\");\n  var self = this;\n  if (!callback) return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n  if (!self.rpcImpl) {\n    setTimeout(function () {\n      callback(Error(\"already ended\"));\n    }, 0);\n    return undefined;\n  }\n  try {\n    return self.rpcImpl(method, requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(), function rpcCallback(err, response) {\n      if (err) {\n        self.emit(\"error\", err, method);\n        return callback(err);\n      }\n      if (response === null) {\n        self.end( /* endedByRPC */true);\n        return undefined;\n      }\n      if (!(response instanceof responseCtor)) {\n        try {\n          response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n        } catch (err) {\n          self.emit(\"error\", err, method);\n          return callback(err);\n        }\n      }\n      self.emit(\"data\", response, method);\n      return callback(null, response);\n    });\n  } catch (err) {\n    self.emit(\"error\", err, method);\n    setTimeout(function () {\n      callback(err);\n    }, 0);\n    return undefined;\n  }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n  if (this.rpcImpl) {\n    if (!endedByRPC)\n      // signal end to rpcImpl\n      this.rpcImpl(null, null, null);\n    this.rpcImpl = null;\n    this.emit(\"end\").off();\n  }\n  return this;\n};","map":{"version":3,"names":["module","exports","Service","util","require","prototype","Object","create","EventEmitter","constructor","rpcImpl","requestDelimited","responseDelimited","TypeError","call","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","self","asPromise","setTimeout","Error","undefined","finish","rpcCallback","err","response","emit","end","endedByRPC","off"],"sources":["C:/Users/ergas/OneDrive/Рабочий стол/inno/FoodFullstack/src/Frontend/node_modules/google-gax/node_modules/protobufjs/src/rpc/service.js"],"sourcesContent":["\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}