{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst stream_1 = require(\"stream\");\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Populate the `{{projectId}}` placeholder.\n *\n * @throws {Error} If a projectId is required, but one is not provided.\n *\n * @param {*} - Any input value that may contain a placeholder. Arrays and objects will be looped.\n * @param {string} projectId - A projectId. If not provided\n * @return {*} - The original argument with all placeholders populated.\n */\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nfunction replaceProjectIdToken(value, projectId) {\n  if (Array.isArray(value)) {\n    value = value.map(v => replaceProjectIdToken(v, projectId));\n  }\n  if (value !== null && typeof value === 'object' && !(value instanceof Buffer) && !(value instanceof stream_1.Stream) && typeof value.hasOwnProperty === 'function') {\n    for (const opt in value) {\n      // eslint-disable-next-line no-prototype-builtins\n      if (value.hasOwnProperty(opt)) {\n        value[opt] = replaceProjectIdToken(value[opt], projectId);\n      }\n    }\n  }\n  if (typeof value === 'string' && value.indexOf('{{projectId}}') > -1) {\n    if (!projectId || projectId === '{{projectId}}') {\n      throw new MissingProjectIdError();\n    }\n    value = value.replace(/{{projectId}}/g, projectId);\n  }\n  return value;\n}\nexports.replaceProjectIdToken = replaceProjectIdToken;\n/**\n * Custom error type for missing project ID errors.\n */\nclass MissingProjectIdError extends Error {\n  constructor() {\n    super(...arguments);\n    this.message = `Sorry, we cannot connect to Cloud Services without a project\n    ID. You may specify one with an environment variable named\n    \"GOOGLE_CLOUD_PROJECT\".`.replace(/ +/g, ' ');\n  }\n}\nexports.MissingProjectIdError = MissingProjectIdError;","map":{"version":3,"names":["Object","defineProperty","exports","value","stream_1","require","replaceProjectIdToken","projectId","Array","isArray","map","v","Buffer","Stream","hasOwnProperty","opt","indexOf","MissingProjectIdError","replace","Error","constructor","arguments","message"],"sources":["C:/Users/ergas/OneDrive/Рабочий стол/inno/FoodFullstack/src/Frontend/node_modules/@google-cloud/projectify/build/src/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst stream_1 = require(\"stream\");\n// Copyright 2014 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n/**\n * Populate the `{{projectId}}` placeholder.\n *\n * @throws {Error} If a projectId is required, but one is not provided.\n *\n * @param {*} - Any input value that may contain a placeholder. Arrays and objects will be looped.\n * @param {string} projectId - A projectId. If not provided\n * @return {*} - The original argument with all placeholders populated.\n */\n// eslint-disable-next-line  @typescript-eslint/no-explicit-any\nfunction replaceProjectIdToken(value, projectId) {\n    if (Array.isArray(value)) {\n        value = value.map(v => replaceProjectIdToken(v, projectId));\n    }\n    if (value !== null &&\n        typeof value === 'object' &&\n        !(value instanceof Buffer) &&\n        !(value instanceof stream_1.Stream) &&\n        typeof value.hasOwnProperty === 'function') {\n        for (const opt in value) {\n            // eslint-disable-next-line no-prototype-builtins\n            if (value.hasOwnProperty(opt)) {\n                value[opt] = replaceProjectIdToken(value[opt], projectId);\n            }\n        }\n    }\n    if (typeof value === 'string' &&\n        value.indexOf('{{projectId}}') > -1) {\n        if (!projectId || projectId === '{{projectId}}') {\n            throw new MissingProjectIdError();\n        }\n        value = value.replace(/{{projectId}}/g, projectId);\n    }\n    return value;\n}\nexports.replaceProjectIdToken = replaceProjectIdToken;\n/**\n * Custom error type for missing project ID errors.\n */\nclass MissingProjectIdError extends Error {\n    constructor() {\n        super(...arguments);\n        this.message = `Sorry, we cannot connect to Cloud Services without a project\n    ID. You may specify one with an environment variable named\n    \"GOOGLE_CLOUD_PROJECT\".`.replace(/ +/g, ' ');\n    }\n}\nexports.MissingProjectIdError = MissingProjectIdError;\n//# sourceMappingURL=index.js.map"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,QAAQ,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,qBAAqBA,CAACH,KAAK,EAAEI,SAAS,EAAE;EAC7C,IAAIC,KAAK,CAACC,OAAO,CAACN,KAAK,CAAC,EAAE;IACtBA,KAAK,GAAGA,KAAK,CAACO,GAAG,CAACC,CAAC,IAAIL,qBAAqB,CAACK,CAAC,EAAEJ,SAAS,CAAC,CAAC;EAC/D;EACA,IAAIJ,KAAK,KAAK,IAAI,IACd,OAAOA,KAAK,KAAK,QAAQ,IACzB,EAAEA,KAAK,YAAYS,MAAM,CAAC,IAC1B,EAAET,KAAK,YAAYC,QAAQ,CAACS,MAAM,CAAC,IACnC,OAAOV,KAAK,CAACW,cAAc,KAAK,UAAU,EAAE;IAC5C,KAAK,MAAMC,GAAG,IAAIZ,KAAK,EAAE;MACrB;MACA,IAAIA,KAAK,CAACW,cAAc,CAACC,GAAG,CAAC,EAAE;QAC3BZ,KAAK,CAACY,GAAG,CAAC,GAAGT,qBAAqB,CAACH,KAAK,CAACY,GAAG,CAAC,EAAER,SAAS,CAAC;MAC7D;IACJ;EACJ;EACA,IAAI,OAAOJ,KAAK,KAAK,QAAQ,IACzBA,KAAK,CAACa,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,EAAE;IACrC,IAAI,CAACT,SAAS,IAAIA,SAAS,KAAK,eAAe,EAAE;MAC7C,MAAM,IAAIU,qBAAqB,CAAC,CAAC;IACrC;IACAd,KAAK,GAAGA,KAAK,CAACe,OAAO,CAAC,gBAAgB,EAAEX,SAAS,CAAC;EACtD;EACA,OAAOJ,KAAK;AAChB;AACAD,OAAO,CAACI,qBAAqB,GAAGA,qBAAqB;AACrD;AACA;AACA;AACA,MAAMW,qBAAqB,SAASE,KAAK,CAAC;EACtCC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,OAAO,GAAI;AACxB;AACA,4BAA4B,CAACJ,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;EAC5C;AACJ;AACAhB,OAAO,CAACe,qBAAqB,GAAGA,qBAAqB"},"metadata":{},"sourceType":"script","externalDependencies":[]}