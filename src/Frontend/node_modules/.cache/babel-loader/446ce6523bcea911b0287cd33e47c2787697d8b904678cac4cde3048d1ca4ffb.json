{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BundleApiCaller = void 0;\nconst call_1 = require(\"../call\");\nconst googleError_1 = require(\"../googleError\");\n/**\n * An implementation of APICaller for bundled calls.\n * Uses BundleExecutor to do bundling.\n */\nclass BundleApiCaller {\n  constructor(bundler) {\n    this.bundler = bundler;\n  }\n  init(callback) {\n    if (callback) {\n      return new call_1.OngoingCall(callback);\n    }\n    return new call_1.OngoingCallPromise();\n  }\n  wrap(func) {\n    return func;\n  }\n  call(apiCall, argument, settings, status) {\n    if (!settings.isBundling) {\n      throw new googleError_1.GoogleError('Bundling enabled with no isBundling!');\n    }\n    status.call((argument, callback) => {\n      this.bundler.schedule(apiCall, argument, callback);\n      return status;\n    }, argument);\n  }\n  fail(canceller, err) {\n    canceller.callback(err);\n  }\n  result(canceller) {\n    return canceller.promise;\n  }\n}\nexports.BundleApiCaller = BundleApiCaller;","map":{"version":3,"names":["call_1","require","googleError_1","BundleApiCaller","constructor","bundler","init","callback","OngoingCall","OngoingCallPromise","wrap","func","call","apiCall","argument","settings","status","isBundling","GoogleError","schedule","fail","canceller","err","result","promise","exports"],"sources":["../../../src/bundlingCalls/bundleApiCaller.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;AAkBA,MAAAA,MAAA,GAAAC,OAAA;AAEA,MAAAC,aAAA,GAAAD,OAAA;AAKA;;;;AAIA,MAAaE,eAAe;EAG1BC,YAAYC,OAAuB;IACjC,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEAC,IAAIA,CAACC,QAAsB;IACzB,IAAIA,QAAQ,EAAE;MACZ,OAAO,IAAIP,MAAA,CAAAQ,WAAW,CAACD,QAAQ,CAAC;;IAElC,OAAO,IAAIP,MAAA,CAAAS,kBAAkB,EAAE;EACjC;EAEAC,IAAIA,CAACC,IAAc;IACjB,OAAOA,IAAI;EACb;EAEAC,IAAIA,CACFC,OAA+B,EAC/BC,QAAY,EACZC,QAAsB,EACtBC,MAA0B;IAE1B,IAAI,CAACD,QAAQ,CAACE,UAAU,EAAE;MACxB,MAAM,IAAIf,aAAA,CAAAgB,WAAW,CAAC,sCAAsC,CAAC;;IAG/DF,MAAM,CAACJ,IAAI,CAAC,CAACE,QAAY,EAAEP,QAAsB,KAAI;MACnD,IAAI,CAACF,OAAO,CAACc,QAAQ,CAACN,OAAO,EAAEC,QAAQ,EAAEP,QAAQ,CAAC;MAClD,OAAOS,MAAM;IACf,CAAC,EAAEF,QAAQ,CAAC;EACd;EAEAM,IAAIA,CAACC,SAA6B,EAAEC,GAAgB;IAClDD,SAAS,CAACd,QAAS,CAACe,GAAG,CAAC;EAC1B;EAEAC,MAAMA,CAACF,SAA6B;IAClC,OAAOA,SAAS,CAACG,OAAO;EAC1B;;AAxCFC,OAAA,CAAAtB,eAAA,GAAAA,eAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}